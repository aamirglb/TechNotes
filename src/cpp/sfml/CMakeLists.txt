# Minimum required version
cmake_minimum_required(VERSION 3.5 FATAL_ERROR)

# Project name and suppported language
project(sfml_test LANGUAGES CXX)

# Enable C++17 support
# add_compile_options(-Wall -Wextra -Wpedantic -std=c++17)
add_compile_options( /std:c++17 /wd4514 /wd5219 /wd4244 /wd5045)

if(WIN32)
    # FOR GCC
    # list(APPEND CMAKE_MODULE_PATH "D:/SW/SFML/cmake")
    # include_directories("D:/SW/SFML/include")
    # link_directories("D:/SW/SFML/build/lib")

    list(APPEND CMAKE_MODULE_PATH "D:/SW/SFML/cmake")
    include_directories("D:/SW/SFML/include")
    link_directories("D:/SW/SFML/build/lib/Debug")

else()
    # SFML library
    find_package(SFML REQUIRED graphics window system network audio)
    include_directories(${SFML_INCLUDE_DIR})
endif()

# add_executable(window window.cpp)
# add_executable(render render.cpp)
# add_executable(shapes shapes.cpp)
# add_executable(image image.cpp)
# add_executable(sfml_test sfml_test.cpp)
# add_executable(shape_circle shape_circle.cpp)
# add_executable(rand_gen rand_gen.cpp)
# add_executable(game game.cpp)
# add_executable(brick brick.cpp)
# add_executable(square_game square_game.cpp)
# add_executable(font_test font_test.cpp)
# add_executable(asset_test asset_test.cpp AssetManager.cpp)
# add_executable(animation animation.cpp AssetManager.cpp)
# add_executable(tetris tetris.cpp)
# add_executable(camera camera.cpp)
# add_executable(font font.cpp)
# add_executable(texture_render texture_render.cpp)
# add_executable(server server.cpp)
# add_executable(client client.cpp)
# add_executable(udp_server udp_server.cpp)
# add_executable(udp_client udp_client.cpp)
# add_executable(nt_game nt_game.cpp)
# add_executable(game2 game2.cpp)
add_executable(ran_circle random-circle.cpp)

# target_link_libraries(window m sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(render m sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(shapes m sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(image m sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(sfml_test m sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(shape_circle sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(rand_gen sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(game sfml-graphics sfml-window sfml-system sfml-audio ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(brick sfml-graphics sfml-window sfml-system sfml-audio ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(square_game sfml-graphics sfml-window sfml-system sfml-audio ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(font_test sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(asset_test sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(animation sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(tetris sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(camera sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(font sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(texture_render sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(server sfml-graphics sfml-window sfml-system sfml-network ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(client sfml-graphics sfml-window sfml-system sfml-network ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(udp_server sfml-graphics sfml-window sfml-system sfml-network ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(udp_client sfml-graphics sfml-window sfml-system sfml-network ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(nt_game sfml-graphics sfml-window sfml-system sfml-network ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(game2 sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
# target_link_libraries(ran_circle sfml-graphics sfml-window sfml-system ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})

target_link_libraries(ran_circle sfml-graphics-d sfml-window-d sfml-system-d ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})

